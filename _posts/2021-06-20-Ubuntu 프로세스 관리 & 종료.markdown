---
layout: post
title:  "Ubuntu 프로세스 관리 & 종료"
date:   2021-06-20 23:31:15 +0900
categories: linux
excerpt_separator: <!--more-->
preview: y
---

## [프로세스 목록 보기 : ps]

``` bash
$ps 
```

  : 현재 셸이나 터미널에서 실행한 사용자 프로세스의 정보를 출력

- 출력정보 PID : 프로세스 번호

- 출력정보 TTY : 현재 터미널 번호

- 출력정보 TIME : 해당 프로세스가 사용한 CPU 시간의 양

- 출력정보 CMD : 프로세스가 실행 중인 명령
<!--more-->
 
``` bash
$ps au 
```

: 터미널에서 실행한 프로세스의 상세 정보 출력

- 출력정보 USER : 사용자 계정 이름

- 출력정보 PID : 프로세스 번호

- 출력정보 %CPU : CPU 사용량을 퍼센트로 표시

- 출력정보 %MEM : 물리적 메모리 사용량을 퍼센트로 표시

- 출력정보 VSZ : 사용하고 있는 가상 메모리 크기(KB)

- 출력정보 RSS : 사용하고 있는 물리적 메모리의 크기(KB)

- 출력정보 TTY : 터미널 번호

- 출력정보 STAT : 프로세스의 상태(필요하면 상태 나타내는 주요 문자의 의미 정리)

- 출력정보 START : 프로세스 시작 시간

- 출력정보 TIME : 해당 프로세스의 CPU 사용 시간

- 출력정보 COMMAND : 프로세스가 실행 중인 명령

 
``` bash
$ps ax | more
```

   : 시스템에서 실행 중인 모든 프로세스 출력(너무 많아 프로세스 목록을 제대로 확인하기 힘드므로, more 명령 함께 사용)

 
``` bash
$ps aux | more
```

   : 시스템에서 실행 중인 모든 프로세스의 자세한 정보 출력

 
``` bash
$ps -fu user
```

   : 특정 사용자(여기선 user)가 실행한 프로세스의 목록 확인

-출력정보 PPID : 부모 프로세스의 PID 번호

-출력정보 C : CPU 사용량(% 값) 

-출력정보 STIME : 프로세스의 시작 날짜나 시간

 

 

 

## [특정 프로세스 정보 검색하기]

``` bash
$ps -ef | grep 명령
```

   : ps명령을 통한 특정 프로세스 정보 검색. 사용 예) ps -ef | grep bash (배시 셸에 대한 정보 검색) 

 
``` bash
$ps -fp $(pgrep -x 명령)
```

 : pgrep 명령을 이용해 특정 프로세스 정보 검색 (pgrep로 검색하려는 프로세스의 PID를 찾아 ps 명령으로 자세한 정보를 확인)

 

 

 

## [프로세스 종료하기]

``` bash
$kill PID
```

  : 15번 시그널을 프로세스에 보내 프로세스를 종료한다. (15번 시그널은 프로세스를 종료하라는 신호)

 
``` bash
$kill -9 PID
```

 : 9번 시그널을 프로세스에 보내 프로세스를 강제 종료한다. (9번 시그널은 강제 종료 신호)

 
``` bash
$pkill -x CMD
```

 : kill과 달리 PID가 아니라 프로세스의 명령 이름(CMD)로 프로세스를 찾아 종료.

                        kill과 달리 명령 이름을 찾아 종료하므로 같은 명령이 여러 개 검색될 경우 한 번에 모두 종료된다



출처: https://klkl0.tistory.com/36 [살만한 세상 만들기]